{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/ts/audiomanager.ts","app/ts/config.ts","app/ts/creditsscreen.ts","app/ts/enemies.ts","app/ts/extensions/array.ts","app/ts/game.ts","app/ts/gamescreen.ts","app/ts/helpscreen.ts","app/ts/input.ts","app/ts/main.ts","app/ts/optionsscreen.ts","app/ts/pausescreen.ts","app/ts/player.ts","app/ts/resources.ts","app/ts/titlescreen.ts","app/ts/vec2.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import { FADE_IN_TIME, FADE_OUT_TIME } from \"./config\";\n\nclass CAudioManager {\n    public gainNode: GainNode;\n\n    private context: AudioContext;\n    private musicSource: AudioBufferSourceNode;\n    private musicTime: number;\n\n    constructor() {\n        this.context = new AudioContext();\n        this.gainNode = this.context.createGain();\n        this.gainNode.connect(this.context.destination);\n        this.musicTime = 0;\n    }\n\n    public async getBuffer(url: string): Promise<AudioBuffer> {\n        return new Promise<AudioBuffer>((resolve) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n            request.responseType = \"arraybuffer\";\n\n            request.onload = () => {\n                this.context.decodeAudioData(request.response, (buffer: AudioBuffer) => {\n                    resolve(buffer);\n                });\n            };\n            request.send();\n        });\n    }\n\n    public playSound(buffer: AudioBuffer) {\n        const source = this.context.createBufferSource();\n        source.buffer = buffer;\n        source.connect(this.context.destination);\n        source.start(0);\n    }\n\n    public startMusic(buffer: AudioBuffer) {\n        this.musicSource = this.context.createBufferSource();\n        this.musicSource.buffer = buffer;\n        this.musicSource.loop = true;\n        this.musicSource.connect(this.gainNode);\n        this.gainNode.gain.linearRampToValueAtTime(0, this.context.currentTime);\n        this.gainNode.gain.linearRampToValueAtTime(1, this.context.currentTime + FADE_IN_TIME);\n        this.musicSource.start(this.musicTime);\n    }\n\n    public stopMusic() {\n        this.gainNode.gain.linearRampToValueAtTime(1, this.context.currentTime);\n        this.gainNode.gain.linearRampToValueAtTime(0, this.context.currentTime + FADE_OUT_TIME);\n        this.musicSource.stop(this.context.currentTime + FADE_OUT_TIME);\n        this.musicTime = 0;\n    }\n\n    public pauseMusic() {\n        this.gainNode.gain.linearRampToValueAtTime(1, this.context.currentTime);\n        this.gainNode.gain.linearRampToValueAtTime(0, this.context.currentTime + FADE_OUT_TIME);\n        this.musicSource.stop(this.context.currentTime + FADE_OUT_TIME);\n        this.musicTime = this.context.currentTime + FADE_OUT_TIME;\n    }\n}\n\nexport const AudioManager = new CAudioManager();\n","export const CANVAS_WIDTH: number = 1100;\nexport const CANVAS_HEIGHT: number = 600;\n\nexport const FADE_IN_TIME: number = 1;\nexport const FADE_OUT_TIME: number = 0.5;\n\nexport const DEBUG: boolean = true;\n\nexport const ARENA_HALFHEIGHT = 202;\nexport const ARENA_HALFWIDTH = 506;\n\nexport const CANVAS_OFFSET_X = CANVAS_WIDTH / 2;\nexport const CANVAS_OFFSET_Y = 144 + ARENA_HALFHEIGHT;\n","import { CANVAS_WIDTH } from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport { IScreen } from \"./screen\";\n\nexport class CreditsScreen implements IScreen {\n    private prevScreen: IScreen;\n    private credits: string[];\n\n    constructor(prevScreen?: IScreen) {\n        this.prevScreen = prevScreen;\n        this.credits = [\n            \"Designed by Alic Szecsei\",\n            \"Artwork by Ren Neymeyer\",\n        ];\n    }\n\n    public update(deltaTime: number): void {\n        if (InputManager.pressed(Key.ENTER)\n            || InputManager.pressed(Key.SPACE)\n            || InputManager.pressed(Key.ESCAPE)) {\n            game.currentScreen = this.prevScreen;\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2, 150);\n        ctx.fillStyle = \"white\";\n        ctx.font = \"32px 'Press Start 2P'\";\n        for (let i = 0; i < this.credits.length; i++) {\n            ctx.fillText(this.credits[i], (CANVAS_WIDTH - ctx.measureText(this.credits[i]).width) / 2, 250 + (i * 50));\n        }\n        ctx.fillStyle = \"yellow\";\n        ctx.font = \"32px 'Press Start 2P'\";\n        const backText = \"Back\";\n        ctx.fillText(backText, (CANVAS_WIDTH - ctx.measureText(backText).width) / 2, 400);\n    }\n\n}\n","import { ARENA_HALFHEIGHT, ARENA_HALFWIDTH, CANVAS_OFFSET_X, CANVAS_OFFSET_Y, DEBUG } from \"./config\";\nimport { game } from \"./game\";\nimport { GameScreen } from \"./gamescreen\";\nimport { IComponent } from \"./rendering\";\nimport * as Resource from \"./resources\";\nimport { Vector2 } from \"./vec2\";\n\nfunction scoreMultiplier(distance: number, multiplier: number): number {\n    return (-67 * distance * distance / 1024 + 2 * distance + 4);\n}\n\nexport class BasicBee implements IComponent {\n    public pos: Vector2;\n    public vel: Vector2;\n    public speed: number;\n    public name: string;\n    public angle: number;\n    public hasEntered: boolean;\n    public radius: number;\n\n    constructor() {\n        this.pos = new Vector2(0, 0);\n        this.vel = new Vector2(0, 0);\n        this.speed = 0.2;\n        this.name = \"BaB\";\n        this.angle = 0;\n        this.hasEntered = false;\n        this.radius = 12;\n    }\n\n    public update(deltaTime: number): void {\n        const gs = game.currentScreen as GameScreen;\n        const velInvNorm = this.vel.inverseNorm;\n        this.pos.x += this.vel.x * deltaTime * this.speed * velInvNorm;\n        this.pos.y += this.vel.y * deltaTime * this.speed * velInvNorm;\n\n        // We'll start the bee outside the room's bounds\n        if (!this.hasEntered) {\n            if (Math.abs(this.pos.y) + this.radius < ARENA_HALFHEIGHT &&\n                Math.abs(this.pos.x) + this.radius < ARENA_HALFWIDTH) {\n                    this.hasEntered = true;\n            }\n        } else {\n            // Check for collisions once we've gotten inside the room!\n            // Collide with edges of the arena\n            if (Math.abs(this.pos.y) + this.radius >= ARENA_HALFHEIGHT) {\n                const dist = ARENA_HALFHEIGHT - (Math.abs(this.pos.y) + this.radius);\n                if (this.pos.y < 0) {\n                    this.pos.y -= dist;\n                } else {\n                    this.pos.y += dist;\n                }\n\n                this.vel.y *= -1;\n                this.vel.x = Math.random() * 2 - 1;\n                this.vel.y = Math.random() * (this.vel.y < 0 ? -1 : 1);\n            }\n            if (Math.abs(this.pos.x) + this.radius >= ARENA_HALFWIDTH) {\n                const dist = ARENA_HALFWIDTH - (Math.abs(this.pos.x) + this.radius);\n                if (this.pos.x < 0) {\n                    this.pos.x -= dist;\n                } else {\n                    this.pos.x += dist;\n                }\n\n                this.vel.x *= -1;\n                this.vel.x = Math.random() * (this.vel.x < 0 ? -1 : 1);\n                this.vel.y = Math.random() * 2 - 1;\n            }\n\n            // Check collision with player\n            const dx = this.pos.x - gs.player.pos.x;\n            const dy = this.pos.y - gs.player.pos.y;\n            const radDist = this.radius + gs.player.radius;\n            const distSq = dx * dx + dy * dy;\n            if (distSq <= radDist * radDist) {\n                gs.isGameOver = true;\n            } else {\n                const dist = Math.sqrt(distSq) - (this.radius + gs.player.radius);\n                if (dist <= 32) {\n                    gs.score += scoreMultiplier(dist, 1) * deltaTime / 100;\n                } else {\n                    gs.score += deltaTime / 100;\n                }\n            }\n        }\n    }\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        const mX = this.pos.x + CANVAS_OFFSET_X;\n        const mY = this.pos.y * -1 + CANVAS_OFFSET_Y;\n\n        this.angle = Math.atan2(this.vel.y, this.vel.x) + Math.PI / 2;\n\n        ctx.translate(mX, mY);\n        ctx.rotate(-this.angle);\n        ctx.drawImage(Resource.getImage(\"basic bee\"), -36, -18);\n        if (DEBUG) {\n            ctx.beginPath();\n            ctx.fillStyle = \"red\";\n            ctx.arc(0, 0, this.radius, 0, 360);\n            ctx.fill();\n        }\n        ctx.rotate(this.angle);\n        ctx.translate(-mX, -mY);\n    }\n}\n","export {};\n\ndeclare global {\n  // tslint:disable-next-line:interface-name\n  interface Array<T> {\n    randomElement(): T;\n  }\n}\n\nArray.prototype.randomElement = function() {\n  return this[Math.floor(Math.random() * this.length)];\n};\n","import { IScreen, IScreenConstructor } from \"./screen\";\nimport { TitleScreen } from \"./titlescreen\";\n\nclass Game {\n    public currentScreen: IScreen;\n\n    public constructor() {\n        this.SetUpScreen(TitleScreen);\n    }\n\n    public SetUpScreen(ScreenType: IScreenConstructor) {\n        const mOldScreen = this.currentScreen;\n        const newScreen = new ScreenType(mOldScreen);\n        this.currentScreen = newScreen;\n    }\n}\n\nexport const game: Game = new Game();\n","import { AudioManager } from \"./audiomanager\";\nimport { CANVAS_HEIGHT, CANVAS_OFFSET_X, CANVAS_OFFSET_Y, CANVAS_WIDTH, DEBUG } from \"./config\";\nimport * as Enemies from \"./enemies\";\nimport \"./extensions/array\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport { PauseScreen } from \"./pausescreen\";\nimport { Player } from \"./player\";\nimport { IComponent } from \"./rendering\";\nimport * as Resource from \"./resources\";\nimport { IScreen } from \"./screen\";\nimport { TitleScreen } from \"./titlescreen\";\nimport { Vector2 } from \"./vec2\";\n\nexport class GameScreen implements IScreen {\n    public score: number;\n    public player: Player;\n    public enemies: IComponent[];\n    public pickups: IComponent[];\n    public spawners: Vector2[];\n    public pickupSpawners: Vector2[];\n    public gameSpeed: number;\n    public isGameOver: boolean;\n\n    private lastSpawned: number;\n    private toSpawn: number;\n    private numSpawnedAtOnce: number;\n    private types: string;\n    private pickupTypes: string[];\n    private currentSpawn: number;\n\n    constructor() {\n        this.score = 0;\n        this.player = new Player();\n        this.enemies = [];\n        this.pickups = [];\n        this.spawners = [\n            new Vector2(-540, 0),\n            new Vector2(540, 0),\n            new Vector2(-376, 252),\n            new Vector2(376, 252),\n            new Vector2(-376, -240),\n            new Vector2(376, -240),\n        ];\n        this.pickupSpawners = [\n            new Vector2(0, 150),\n            new Vector2(0, 0),\n            new Vector2(0, -150),\n            new Vector2(-200, 150),\n            new Vector2(-200, 0),\n            new Vector2(-200, -150),\n            new Vector2(200, 150),\n            new Vector2(-200, 0),\n            new Vector2(200, -150),\n            new Vector2(480, 150),\n            new Vector2(480, 0),\n            new Vector2(480, -150),\n            new Vector2(-480, 150),\n            new Vector2(-480, 0),\n            new Vector2(-480, -150),\n        ];\n\n        this.lastSpawned = 0;\n        this.toSpawn = 2000;\n        this.numSpawnedAtOnce = 2;\n        this.isGameOver = false;\n\n        this.types = \"bb--BB--UU--EH--EH--LLLL--\";\n        this.pickupTypes = [\"Bee Time\"];\n        this.currentSpawn = 0;\n\n        this.gameSpeed = 1;\n\n        AudioManager.startMusic(Resource.getAudio(\"bgm\"));\n    }\n\n    public update(deltaTime: number): void {\n        this.player.update(deltaTime * this.gameSpeed);\n\n        for (const enemy of this.enemies) {\n            enemy.update(deltaTime * this.gameSpeed);\n        }\n        for (const pickup of this.pickups) {\n            pickup.update(deltaTime * this.gameSpeed);\n        }\n\n        // Spawn a new enemy\n        if (this.lastSpawned >= this.toSpawn) {\n            this.lastSpawned = 0;\n            if (this.enemies.length >= 10) {\n                this.toSpawn = 5000;\n            }\n            for (let i = 0; i < this.numSpawnedAtOnce; i++) {\n                if (this.types.charAt(this.currentSpawn) === \"b\") {\n                    const enemy = new Enemies.BasicBee();\n                    const spawn = this.spawners.randomElement();\n                    enemy.pos = new Vector2(spawn.x, spawn.y);\n                    enemy.vel = new Vector2((enemy.pos.x < -500 ? 1 : (enemy.pos.x > 500 ? -1 : Math.random() * 2 - 1)),\n                                        (enemy.pos.y < -100 ? 1 : (enemy.pos.y > 100 ? -1 : Math.random() * 2 - 1)));\n                    this.enemies.push(enemy);\n                }\n\n                this.currentSpawn = (this.currentSpawn + 1) % this.types.length;\n            }\n\n            // TODO: Randomly spawn pickups\n        } else {\n            this.lastSpawned += deltaTime * this.gameSpeed;\n        }\n\n        if (this.isGameOver) {\n            // TODO: Set high score\n            game.SetUpScreen(TitleScreen);\n            AudioManager.stopMusic();\n        }\n\n        if (InputManager.isDown(Key.ESCAPE)) {\n            game.SetUpScreen(PauseScreen);\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.drawImage(Resource.getImage(\"background\"), 0, 0, CANVAS_WIDTH, CANVAS_HEIGHT);\n        ctx.fillStyle = \"white\";\n        ctx.font = \"16pt 'Press Start 2P'\";\n        const titleText = `Score: ${this.score.toFixed(0)}`;\n        ctx.fillText(titleText, 700, 50);\n\n        // TODO: Draw active pickup\n\n        this.player.draw(ctx, deltaTime * this.gameSpeed);\n\n        for (const enemy of this.enemies) {\n            enemy.draw(ctx, deltaTime * this.gameSpeed);\n        }\n        for (const pickup of this.pickups) {\n            pickup.draw(ctx, deltaTime * this.gameSpeed);\n        }\n\n        if (DEBUG) {\n            for (const spawner of this.spawners) {\n                const mX = spawner.x + CANVAS_OFFSET_X;\n                const mY = spawner.y * -1 + CANVAS_OFFSET_Y;\n\n                ctx.translate(mX, mY);\n                ctx.beginPath();\n                ctx.arc(0, 0, 10, 0, 360);\n                ctx.fillStyle = \"blue\";\n                ctx.fill();\n                ctx.translate(-mX, -mY);\n            }\n        }\n    }\n}\n","import { CANVAS_WIDTH } from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport { IScreen } from \"./screen\";\n\nexport class HelpScreen implements IScreen {\n    private prevScreen: IScreen;\n    private instructions: string[];\n\n    constructor(prevScreen: IScreen) {\n        this.prevScreen = prevScreen;\n        this.instructions = [\n            \"Arrow keys to move\",\n            \"Spacebar to activate pickups\",\n            \"Dodge the bees to survive!\",\n        ];\n    }\n\n    public update(deltaTime: number): void {\n        if (InputManager.pressed(Key.ENTER)\n            || InputManager.pressed(Key.SPACE)\n            || InputManager.pressed(Key.ESCAPE)) {\n            game.currentScreen = this.prevScreen;\n        }\n    }\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2, 150);\n        ctx.fillStyle = \"white\";\n        ctx.font = \"32px 'Press Start 2P'\";\n        for (let i = 0; i < this.instructions.length; i++) {\n            const xPos = (CANVAS_WIDTH - ctx.measureText(this.instructions[i]).width) / 2;\n            const yPos = 250 + i * 50;\n            ctx.fillText(this.instructions[i], xPos, yPos);\n        }\n        ctx.fillStyle = \"yellow\";\n        ctx.font = \"32px 'Press Start 2P'\";\n        const backText = \"Back\";\n        ctx.fillText(backText, (CANVAS_WIDTH - ctx.measureText(backText).width) / 2, 400);\n    }\n}\n","export enum Key {\n    BACKSPACE = 8,\n    TAB = 9,\n    ENTER = 13,\n    SHIFT = 16,\n    CTRL = 17,\n    ALT = 18,\n    PAUSE_BREAK = 19,\n    CAPS_LOCK = 20,\n    ESCAPE = 27,\n    SPACE = 32,\n    PAGE_UP = 33,\n    PAGE_DOWN = 34,\n    END = 35,\n    HOME = 36,\n    LEFT_ARROW = 37,\n    UP_ARROW = 38,\n    RIGHT_ARROW = 39,\n    DOWN_ARROW = 40,\n    INSERT = 45,\n    DELETE = 46,\n    ZERO = 48,\n    ONE = 49,\n    TWO = 50,\n    THREE = 51,\n    FOUR = 52,\n    FIVE = 53,\n    SIX = 54,\n    SEVEN = 55,\n    EIGHT = 56,\n    NINE = 57,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 81,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    WIN_LEFT = 91,\n    WIN_RIGHT = 92,\n    SELECT = 93,\n    NUM_ZERO = 96,\n    NUM_ONE = 97,\n    NUM_TWO = 98,\n    NUM_THREE = 99,\n    NUM_FOUR = 100,\n    NUM_FIVE = 101,\n    NUM_SIX = 102,\n    NUM_SEVEN = 103,\n    NUM_EIGHT = 104,\n    NUM_NINE = 105,\n    MULTIPLY = 106,\n    ADD = 107,\n    SUBTRACT = 109,\n    DECIMAL = 110,\n    DIVIDE = 111,\n    F1 = 112,\n    F2 = 113,\n    F3 = 114,\n    F4 = 115,\n    F5 = 116,\n    F6 = 117,\n    F7 = 118,\n    F8 = 119,\n    F9 = 120,\n    F10 = 121,\n    F11 = 122,\n    F12 = 123,\n    NUM_LOCK = 144,\n    SCROLL_LOCK = 145,\n    SEMICOLON = 186,\n    EQUALS = 187,\n    COMMA = 188,\n    DASH = 189,\n    PERIOD = 190,\n    FORWARD_SLASH = 191,\n    GRAVE_ACCENT = 192,\n    OPEN_BRACKET = 219,\n    BACK_SLASH = 220,\n    CLOSE_BRACKET = 221,\n    SINGLE_QUOTE = 222,\n}\n\nclass CInputManager {\n\n    private mPressed = new Set<Key>();\n    private mLastPressed = new Set<Key>();\n\n    public isDown(keyCode: Key) {\n        return this.mPressed.has(keyCode);\n    }\n\n    public pressed(keyCode: Key) {\n        return this.mPressed.has(keyCode) && !this.mLastPressed.has(keyCode);\n    }\n\n    public isUp(keyCode: Key) {\n        return !this.mPressed.has(keyCode);\n    }\n\n    public released(keyCode: Key) {\n        return !this.mPressed.has(keyCode) && this.mLastPressed.has(keyCode);\n    }\n\n    public onKeydown(event: KeyboardEvent) {\n        this.mPressed.add(event.keyCode);\n        event.preventDefault();\n    }\n\n    public onKeyup(event: KeyboardEvent) {\n        this.mPressed.delete(event.keyCode);\n        event.preventDefault();\n    }\n\n    public flush() {\n        this.mLastPressed.clear();\n        this.mPressed.forEach((k: Key) => {\n            this.mLastPressed.add(k);\n        });\n    }\n}\n\nexport const InputManager = new CInputManager();\n","import * as config from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport * as Resource from \"./resources\";\n\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\ncanvas.width = config.CANVAS_WIDTH;\ncanvas.height = config.CANVAS_HEIGHT;\nconst ctx = canvas.getContext(\"2d\", {alpha: false});\nctx.imageSmoothingEnabled = false;\nctx.textBaseline = \"middle\";\ncanvas.width = config.CANVAS_WIDTH;\ncanvas.height = config.CANVAS_HEIGHT;\nconst FPS = 30;\n\nResource.loadImage(\"background\", \"img/bg.png\");\nResource.loadImage(\"player\", \"img/player.png\");\nResource.loadImage(\"basic bee\", \"img/basicbee.png\");\nResource.loadImage(\"big bee\", \"img/bigbee.png\");\nResource.loadImage(\"bee time\", \"img/beetime.png\");\nResource.loadImage(\"bumblebee\", \"img/bumblebee.png\");\nResource.loadImage(\"honey\", \"img/Honey_Anim.png\");\nResource.loadImage(\"honey bee\", \"img/honeybee.png\");\nResource.loadImage(\"eldritch bee\", \"img/eldritch_anim.png\");\nResource.loadImage(\"laser bee\", \"img/laser bee complete.png\");\nResource.loadAudio(\"bgm\", \"audio/beedodger.ogg\");\n\nlet last = -1;\nconst fpsList = [0];\n\n// add input listeners\nwindow.addEventListener(\"keyup\", (event: KeyboardEvent) => InputManager.onKeyup(event));\nwindow.addEventListener(\"keydown\", (event: KeyboardEvent) => InputManager.onKeydown(event));\n\nfunction gameloop(ts: number) {\n  let inc = 0;\n  if (last === -1) {\n    last = ts;\n  } else {\n    inc = ts - last;\n    last = ts;\n  }\n\n  ctx.clearRect(0, 0, config.CANVAS_WIDTH, config.CANVAS_HEIGHT);\n\n  game.currentScreen.update(inc);\n  game.currentScreen.draw(ctx, inc);\n\n  /* FPS Counter */\n  if (config.DEBUG) {\n    fpsList.push(inc);\n    if (fpsList.length > 10) {\n      fpsList.shift();\n      ctx.fillStyle = \"white\";\n      ctx.font = \"1em 'Press Start 2P\";\n      const avgFPS = fpsList.reduce((x, y) => x + y, 0) / 10;\n      ctx.fillText(`FPS: ${(1000 / avgFPS).toFixed(3)}`, 50, 50);\n    }\n  }\n\n  InputManager.flush();\n\n  window.requestAnimationFrame(gameloop);\n}\nwindow.requestAnimationFrame(gameloop);\n","import { CANVAS_HEIGHT, CANVAS_WIDTH } from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport { IScreen } from \"./screen\";\n\nexport class OptionsScreen implements IScreen {\n    private prevScreen: IScreen;\n    private options: string[];\n    private selected: number;\n\n    constructor(prevScreen?: IScreen) {\n        this.prevScreen = prevScreen;\n        this.options = [\"Clear High Scores\", \"Back\"];\n        this.selected = this.options.length - 1;\n    }\n\n    public update(deltaTime: number): void {\n        if (InputManager.pressed(Key.UP_ARROW) || InputManager.pressed(Key.W)) {\n            this.selected = (this.selected === 0 ? this.options.length - 1 : this.selected - 1);\n        }\n        if (InputManager.pressed(Key.DOWN_ARROW) || InputManager.pressed(Key.S)) {\n            this.selected = (this.selected === this.options.length - 1 ? 0 : this.selected + 1);\n        }\n\n        if (InputManager.pressed(Key.ENTER) || InputManager.pressed(Key.SPACE)) {\n            if (this.selected === 1) {\n                game.currentScreen = this.prevScreen;\n            } else if (this.selected === 0) {\n                // TODO: Clear high scores\n                game.currentScreen = this.prevScreen;\n            }\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"32pt 'Press Start 2P'\";\n        const titleText = \"OPTIONS\";\n        let xPos = (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2;\n        let yPos = CANVAS_HEIGHT / 2;\n        ctx.fillText(titleText, xPos, yPos);\n\n        ctx.font = \"16pt 'Press Start 2P'\";\n        for (let i = 0; i < this.options.length; i++) {\n            if (i === this.selected) {\n                ctx.fillStyle = \"yellow\";\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            xPos = (CANVAS_WIDTH - ctx.measureText(this.options[i]).width) / 2;\n            yPos = 400 + i * 50;\n            ctx.fillText(this.options[i], xPos, yPos);\n        }\n    }\n}\n","import { CANVAS_HEIGHT, CANVAS_WIDTH } from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport { OptionsScreen } from \"./optionsscreen\";\nimport { IScreen } from \"./screen\";\nimport { TitleScreen } from \"./titlescreen\";\nimport { AudioManager } from \"./audiomanager\";\n\nexport class PauseScreen implements IScreen {\n    private prevScreen: IScreen;\n    private selected: number;\n    private menuItems: string[];\n\n    constructor(prevScreen?: IScreen) {\n        this.prevScreen = prevScreen;\n        this.selected = 0;\n        this.menuItems = [\n            \"Resume\",\n            \"Options\",\n            \"Quit\",\n        ];\n    }\n\n    public update(deltaTime: number): void {\n        if (InputManager.pressed(Key.UP_ARROW)\n            || InputManager.pressed(Key.W)) {\n            if (this.selected !== 0) {\n                this.selected -= 1;\n            }\n        }\n        if (InputManager.pressed(Key.DOWN_ARROW)\n            || InputManager.pressed(Key.S)) {\n            if (this.selected !== this.menuItems.length - 1) {\n                this.selected += 1;\n            }\n        }\n        if (InputManager.pressed(Key.ENTER)\n            || InputManager.pressed(Key.SPACE)) {\n            if (this.selected === 0) {\n                game.currentScreen = this.prevScreen;\n            } else if (this.selected === 1) {\n                game.SetUpScreen(OptionsScreen);\n            } else if (this.selected === 2) {\n                AudioManager.stopMusic();\n                game.SetUpScreen(TitleScreen);\n            }\n        }\n    }\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"32pt 'Press Start 2P'\";\n        const titleText = \"PAUSED\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2, CANVAS_HEIGHT / 2);\n\n        ctx.font = \"32px 'Press Start 2P'\";\n        for (let i = 0; i < this.menuItems.length; i++) {\n            if (i === this.selected) {\n                ctx.fillStyle = \"yellow\";\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            const xPos = (CANVAS_WIDTH - ctx.measureText(this.menuItems[i]).width) / 2;\n            const yPos = 400 + i * 50;\n            ctx.fillText(this.menuItems[i], xPos, yPos);\n        }\n    }\n}\n","import { IComponent } from \"./rendering\";\nimport { Vector2 } from \"./vec2\";\nimport { InputManager, Key } from \"./input\";\nimport { game } from \"./game\";\nimport { GameScreen } from \"./gamescreen\";\nimport { ARENA_HALFHEIGHT, ARENA_HALFWIDTH, CANVAS_WIDTH, CANVAS_OFFSET_X, CANVAS_OFFSET_Y, DEBUG } from \"./config\";\nimport * as Resource from \"./resources\";\n\nexport class Player implements IComponent {\n    public pos: Vector2;\n    public vel: Vector2;\n    public speed: number;\n    public name: string;\n    public angle: number;\n    public radius: number;\n    public pickup: string;\n    public pickupttl: number;\n    public pickupActive: boolean;\n\n    constructor() {\n        this.pos = new Vector2(0, 0);\n        this.vel = new Vector2(0, 0);\n        this.speed = 0.25;\n        this.name = \"Player\";\n        this.angle = 0;\n        this.radius = 16;\n        this.pickup = \"\";\n        this.pickupttl = 0;\n        this.pickupActive = false;\n    }\n\n    public update(deltaTime: number): void {\n        this.vel.x = ((InputManager.isDown(Key.LEFT_ARROW) || InputManager.isDown(Key.A)) ? -1 : 0) +\n                     ((InputManager.isDown(Key.RIGHT_ARROW) || InputManager.isDown(Key.D)) ? 1 : 0);\n        this.vel.y = ((InputManager.isDown(Key.DOWN_ARROW) || InputManager.isDown(Key.S)) ? -1 : 0) +\n                     ((InputManager.isDown(Key.UP_ARROW) || InputManager.isDown(Key.W)) ? 1 : 0);\n\n        if (this.pickupttl <= 0) {\n            if (this.pickup !== \"\" && this.pickupActive) {\n                if (this.pickup === \"Bee Time\") {\n                    (game.currentScreen as GameScreen).gameSpeed = 1;\n                }\n                this.pickup = \"\";\n                this.pickupActive = false;\n            }\n            if (InputManager.pressed(Key.SPACE)) {\n                if (this.pickup === \"Bee Time\") {\n                    this.pickupttl = 5000;\n                    (game.currentScreen as GameScreen).gameSpeed = 0.5;\n                    this.pickupActive = true;\n                }\n            }\n        } else {\n            this.pickupttl -= deltaTime / (game.currentScreen as GameScreen).gameSpeed;\n        }\n\n        this.pos.x += this.vel.x * deltaTime * this.speed *\n            (this.vel.x !== 0 && this.vel.y !== 0 ? Math.sqrt(2) / 2 : 1);\n        this.pos.y += this.vel.y * deltaTime * this.speed *\n            (this.vel.x !== 0 && this.vel.y !== 0 ? Math.sqrt(2) / 2 : 1);\n\n        // Collide with edges of screen\n        if (Math.abs(this.pos.y) + this.radius >= ARENA_HALFHEIGHT) {\n            const dist = ARENA_HALFHEIGHT - (Math.abs(this.pos.y) + this.radius);\n            if (this.pos.y < 0) {\n                this.pos.y -= dist;\n            } else {\n                this.pos.y += dist;\n            }\n        }\n        if (Math.abs(this.pos.x) + this.radius >= ARENA_HALFWIDTH) {\n            const dist = ARENA_HALFWIDTH - (Math.abs(this.pos.x) + this.radius);\n            if (this.pos.x < 0) {\n                this.pos.x -= dist;\n            } else {\n                this.pos.x += dist;\n            }\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        const mX = this.pos.x + CANVAS_OFFSET_X;\n        const mY = this.pos.y * -1 + CANVAS_OFFSET_Y;\n\n        if (this.vel.x !== 0 || this.vel.y !== 0) {\n            if (Math.abs(this.vel.x) > Math.abs(this.vel.y)) {\n                this.angle = Math.PI / 2;\n            } else if (this.vel.x === -1 * this.vel.y) {\n                this.angle = -Math.PI / 4;\n            } else if (this.vel.x === this.vel.y) {\n                this.angle = Math.PI / 4;\n            } else if (Math.abs(this.vel.y) > Math.abs(this.vel.x)) {\n                this.angle = 0;\n            }\n        }\n\n        ctx.translate(mX, mY);\n        ctx.rotate(this.angle);\n        ctx.drawImage(Resource.getImage(\"player\"), -34, -18);\n        if (DEBUG) {\n            ctx.beginPath();\n            ctx.fillStyle = \"green\";\n            ctx.arc(0, 0, this.radius, 0, 360);\n            ctx.fill();\n        }\n        ctx.rotate(-this.angle);\n        ctx.translate(-mX, -mY);\n    }\n}\n","import { AudioManager } from \"./audiomanager\";\n\nconst images = new Map<string, HTMLImageElement>();\nconst audio = new Map<string, AudioBuffer>();\n\nexport function getAudio(name: string): AudioBuffer {\n    return audio.get(name);\n}\n\nexport function getImage(name: string): HTMLImageElement {\n    return images.get(name) as HTMLImageElement;\n}\n\nexport function loadImage(name: string, path: string) {\n    const img = new Image();\n    img.src = path;\n    images.set(name, img);\n}\n\nexport function loadAudio(name: string, path: string) {\n    AudioManager.getBuffer(path)\n        .then((buffer: AudioBuffer) => audio.set(name, buffer));\n}\n","import { CANVAS_HEIGHT, CANVAS_WIDTH } from \"./config\";\nimport { CreditsScreen } from \"./creditsscreen\";\nimport { game } from \"./game\";\nimport { GameScreen } from \"./gamescreen\";\nimport { HelpScreen } from \"./helpscreen\";\nimport { InputManager, Key } from \"./input\";\nimport { OptionsScreen } from \"./optionsscreen\";\nimport { IScreen } from \"./screen\";\n\nexport class TitleScreen implements IScreen {\n\n    private selected: number;\n    private menuItems: string[];\n    private menuActions: Array<(() => void)>;\n\n    constructor() {\n        this.selected = 0;\n        this.menuItems = [\"Start\", \"Options\", \"Help\", \"Credits\"];\n        this.menuActions = [this.chooseGame, this.chooseOptions, this.chooseHelp, this.chooseCredits];\n    }\n\n    public update() {\n        if (InputManager.pressed(Key.UP_ARROW) || InputManager.pressed(Key.W)) {\n            if (this.selected !== 0) {\n                this.selected -= 1;\n            }\n        }\n        if (InputManager.pressed(Key.DOWN_ARROW) || InputManager.pressed(Key.S)) {\n            if (this.selected !== this.menuItems.length - 1) {\n                this.selected += 1;\n            }\n        }\n        if (InputManager.pressed(Key.ENTER) || InputManager.pressed(Key.SPACE)) {\n            // Selection\n            this.menuActions[this.selected]();\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = \"white\";\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2, CANVAS_HEIGHT / 2 - 50);\n\n        ctx.font = \"32px 'Press Start 2P'\";\n        for (let i = 0; i < this.menuItems.length; i++) {\n            if (i === this.selected) {\n                ctx.fillStyle = \"yellow\";\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            const menuText = (i === this.selected ? \"- \" : \"\") + this.menuItems[i];\n            const xPos = 150 + (i === this.selected ? 50 : 0);\n            const yPos = 400 + i * 50;\n            ctx.fillText(menuText, xPos, yPos);\n        }\n    }\n\n    private chooseGame() {\n        game.SetUpScreen(GameScreen);\n    }\n\n    private chooseOptions() {\n        game.SetUpScreen(OptionsScreen);\n    }\n\n    private chooseHelp() {\n        game.SetUpScreen(HelpScreen);\n    }\n\n    private chooseCredits() {\n        game.SetUpScreen(CreditsScreen);\n    }\n}\n","export class Vector2 {\n  constructor(public x: number, public y: number) { }\n\n  public get inverseNorm(): number {\n    return 1.0 / Math.sqrt(this.x * this.x + this.y * this.y);\n  }\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}