{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/ts/config.ts","app/ts/creditsscreen.ts","app/ts/game.ts","app/ts/helpscreen.ts","app/ts/input.ts","app/ts/main.ts","app/ts/optionsscreen.ts","app/ts/titlescreen.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export const CANVAS_WIDTH: number = 1100;\nexport const CANVAS_HEIGHT: number = 600;\n\nexport const FADE_IN_TIME: number = 1;\nexport const FADE_OUT_TIME: number = 0.5;\n\nexport const DEBUG: boolean = true;\n\nexport const CANVAS_OFFSET_X = CANVAS_WIDTH / 2;\nexport const CANVAS_OFFSET_Y = 144 + 202;\n","import { CANVAS_WIDTH } from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport { IScreen } from \"./screen\";\n\nexport class CreditsScreen implements IScreen {\n    private prevScreen: IScreen;\n    private credits: string[];\n\n    constructor(prevScreen?: IScreen) {\n        this.prevScreen = prevScreen;\n        this.credits = [\n            \"Designed by Alic Szecsei\",\n            \"Artwork by Ren Neymeyer\",\n        ];\n    }\n\n    public update(deltaTime: number): void {\n        if (InputManager.pressed(Key.ENTER)\n            || InputManager.pressed(Key.SPACE)\n            || InputManager.pressed(Key.ESCAPE)) {\n            game.currentScreen = this.prevScreen;\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2, 150);\n        ctx.fillStyle = \"white\";\n        ctx.font = \"32px 'Press Start 2P'\";\n        for (let i = 0; i < this.credits.length; i++) {\n            ctx.fillText(this.credits[i], (CANVAS_WIDTH - ctx.measureText(this.credits[i]).width) / 2, 250 + (i * 50));\n        }\n        ctx.fillStyle = \"yellow\";\n        ctx.font = \"32px 'Press Start 2P'\";\n        const backText = \"Back\";\n        ctx.fillText(backText, (CANVAS_WIDTH - ctx.measureText(backText).width) / 2, 400);\n    }\n\n}\n","import { IScreen, IScreenConstructor } from \"./screen\";\nimport { TitleScreen } from \"./titlescreen\";\n\nclass Game {\n    public currentScreen: IScreen;\n\n    public constructor() {\n        this.SetUpScreen(TitleScreen);\n    }\n\n    public SetUpScreen(ScreenType: IScreenConstructor) {\n        const mOldScreen = this.currentScreen;\n        const newScreen = new ScreenType(mOldScreen);\n        this.currentScreen = newScreen;\n    }\n}\n\nexport const game: Game = new Game();\n","import { CANVAS_WIDTH } from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport { IScreen } from \"./screen\";\n\nexport class HelpScreen implements IScreen {\n    private prevScreen: IScreen;\n    private instructions: string[];\n\n    constructor(prevScreen: IScreen) {\n        this.prevScreen = prevScreen;\n        this.instructions = [\n            \"Arrow keys to move\",\n            \"Spacebar to activate pickups\",\n            \"Dodge the bees to survive!\",\n        ];\n    }\n\n    public update(deltaTime: number): void {\n        if (InputManager.pressed(Key.ENTER)\n            || InputManager.pressed(Key.SPACE)\n            || InputManager.pressed(Key.ESCAPE)) {\n            game.currentScreen = this.prevScreen;\n        }\n    }\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2, 150);\n        ctx.fillStyle = \"white\";\n        ctx.font = \"32px 'Press Start 2P'\";\n        for (let i = 0; i < this.instructions.length; i++) {\n            const xPos = (CANVAS_WIDTH - ctx.measureText(this.instructions[i]).width) / 2;\n            const yPos = 250 + i * 50;\n            ctx.fillText(this.instructions[i], xPos, yPos);\n        }\n        ctx.fillStyle = \"yellow\";\n        ctx.font = \"32px 'Press Start 2P'\";\n        const backText = \"Back\";\n        ctx.fillText(backText, (CANVAS_WIDTH - ctx.measureText(backText).width) / 2, 400);\n    }\n}\n","export enum Key {\n    BACKSPACE = 8,\n    TAB = 9,\n    ENTER = 13,\n    SHIFT = 16,\n    CTRL = 17,\n    ALT = 18,\n    PAUSE_BREAK = 19,\n    CAPS_LOCK = 20,\n    ESCAPE = 27,\n    SPACE = 32,\n    PAGE_UP = 33,\n    PAGE_DOWN = 34,\n    END = 35,\n    HOME = 36,\n    LEFT_ARROW = 37,\n    UP_ARROW = 38,\n    RIGHT_ARROW = 39,\n    DOWN_ARROW = 40,\n    INSERT = 45,\n    DELETE = 46,\n    ZERO = 48,\n    ONE = 49,\n    TWO = 50,\n    THREE = 51,\n    FOUR = 52,\n    FIVE = 53,\n    SIX = 54,\n    SEVEN = 55,\n    EIGHT = 56,\n    NINE = 57,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 81,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    WIN_LEFT = 91,\n    WIN_RIGHT = 92,\n    SELECT = 93,\n    NUM_ZERO = 96,\n    NUM_ONE = 97,\n    NUM_TWO = 98,\n    NUM_THREE = 99,\n    NUM_FOUR = 100,\n    NUM_FIVE = 101,\n    NUM_SIX = 102,\n    NUM_SEVEN = 103,\n    NUM_EIGHT = 104,\n    NUM_NINE = 105,\n    MULTIPLY = 106,\n    ADD = 107,\n    SUBTRACT = 109,\n    DECIMAL = 110,\n    DIVIDE = 111,\n    F1 = 112,\n    F2 = 113,\n    F3 = 114,\n    F4 = 115,\n    F5 = 116,\n    F6 = 117,\n    F7 = 118,\n    F8 = 119,\n    F9 = 120,\n    F10 = 121,\n    F11 = 122,\n    F12 = 123,\n    NUM_LOCK = 144,\n    SCROLL_LOCK = 145,\n    SEMICOLON = 186,\n    EQUALS = 187,\n    COMMA = 188,\n    DASH = 189,\n    PERIOD = 190,\n    FORWARD_SLASH = 191,\n    GRAVE_ACCENT = 192,\n    OPEN_BRACKET = 219,\n    BACK_SLASH = 220,\n    CLOSE_BRACKET = 221,\n    SINGLE_QUOTE = 222,\n}\n\nclass CInputManager {\n\n    private mPressed = new Set<Key>();\n    private mLastPressed = new Set<Key>();\n\n    public isDown(keyCode: Key) {\n        return this.mPressed.has(keyCode);\n    }\n\n    public pressed(keyCode: Key) {\n        return this.mPressed.has(keyCode) && !this.mLastPressed.has(keyCode);\n    }\n\n    public isUp(keyCode: Key) {\n        return !this.mPressed.has(keyCode);\n    }\n\n    public released(keyCode: Key) {\n        return !this.mPressed.has(keyCode) && this.mLastPressed.has(keyCode);\n    }\n\n    public onKeydown(event: KeyboardEvent) {\n        this.mPressed.add(event.keyCode);\n        event.preventDefault();\n    }\n\n    public onKeyup(event: KeyboardEvent) {\n        this.mPressed.delete(event.keyCode);\n        event.preventDefault();\n    }\n\n    public flush() {\n        this.mLastPressed.clear();\n        this.mPressed.forEach((k: Key) => {\n            this.mLastPressed.add(k);\n        });\n    }\n}\n\nexport const InputManager = new CInputManager();\n","import * as config from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\n\nconst canvas = document.getElementById(\"canvas\") as HTMLCanvasElement;\ncanvas.width = config.CANVAS_WIDTH;\ncanvas.height = config.CANVAS_HEIGHT;\nconst ctx = canvas.getContext(\"2d\", {alpha: false});\nctx.imageSmoothingEnabled = false;\nctx.textBaseline = \"middle\";\ncanvas.width = config.CANVAS_WIDTH;\ncanvas.height = config.CANVAS_HEIGHT;\nconst FPS = 30;\n\n// TODO: Load all resources\n\nlet last = -1;\nconst fpsList = [0];\n\n// add input listeners\nwindow.addEventListener(\"keyup\", (event: KeyboardEvent) => InputManager.onKeyup(event));\nwindow.addEventListener(\"keydown\", (event: KeyboardEvent) => InputManager.onKeydown(event));\n\nfunction gameloop(ts: number) {\n  let inc = 0;\n  if (last === -1) {\n    last = ts;\n  } else {\n    inc = ts - last;\n    last = ts;\n  }\n\n  ctx.clearRect(0, 0, config.CANVAS_WIDTH, config.CANVAS_HEIGHT);\n\n  game.currentScreen.update(inc);\n  game.currentScreen.draw(ctx, inc);\n\n  /* FPS Counter */\n  if (config.DEBUG) {\n    fpsList.push(inc);\n    if (fpsList.length > 10) {\n      fpsList.shift();\n      ctx.fillStyle = \"white\";\n      ctx.font = \"1em 'Press Start 2P\";\n      const avgFPS = fpsList.reduce((x, y) => x + y, 0) / 10;\n      ctx.fillText(`FPS: ${(1000 / avgFPS).toFixed(3)}`, 50, 50);\n    }\n  }\n\n  InputManager.flush();\n\n  window.requestAnimationFrame(gameloop);\n}\nwindow.requestAnimationFrame(gameloop);\n","import { CANVAS_HEIGHT, CANVAS_WIDTH } from \"./config\";\nimport { game } from \"./game\";\nimport { InputManager, Key } from \"./input\";\nimport { IScreen } from \"./screen\";\n\nexport class OptionsScreen implements IScreen {\n    private prevScreen: IScreen;\n    private options: string[];\n    private selected: number;\n\n    constructor(prevScreen?: IScreen) {\n        this.prevScreen = prevScreen;\n        this.options = [\"Clear High Scores\", \"Back\"];\n        this.selected = this.options.length - 1;\n    }\n\n    public update(deltaTime: number): void {\n        if (InputManager.pressed(Key.UP_ARROW) || InputManager.pressed(Key.W)) {\n            this.selected = (this.selected === 0 ? this.options.length - 1 : this.selected - 1);\n        }\n        if (InputManager.pressed(Key.DOWN_ARROW) || InputManager.pressed(Key.S)) {\n            this.selected = (this.selected === this.options.length - 1 ? 0 : this.selected + 1);\n        }\n\n        if (InputManager.pressed(Key.ENTER) || InputManager.pressed(Key.SPACE)) {\n            if (this.selected === 1) {\n                game.currentScreen = this.prevScreen;\n            } else if (this.selected === 0) {\n                // TODO: Clear high scores\n                game.currentScreen = this.prevScreen;\n            }\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = \"red\";\n        ctx.font = \"32pt 'Press Start 2P'\";\n        const titleText = \"OPTIONS\";\n        let xPos = (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2;\n        let yPos = CANVAS_HEIGHT / 2;\n        ctx.fillText(titleText, xPos, yPos);\n\n        ctx.font = \"16pt 'Press Start 2P'\";\n        for (let i = 0; i < this.options.length; i++) {\n            if (i === this.selected) {\n                ctx.fillStyle = \"yellow\";\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            xPos = (CANVAS_WIDTH - ctx.measureText(this.options[i]).width) / 2;\n            yPos = 400 + i * 50;\n            ctx.fillText(this.options[i], xPos, yPos);\n        }\n    }\n}\n","import { CANVAS_HEIGHT, CANVAS_WIDTH } from \"./config\";\nimport { CreditsScreen } from \"./creditsscreen\";\nimport { game } from \"./game\";\nimport { HelpScreen } from \"./helpscreen\";\nimport { InputManager, Key } from \"./input\";\nimport { OptionsScreen } from \"./optionsscreen\";\nimport { IScreen } from \"./screen\";\n\nexport class TitleScreen implements IScreen {\n\n    private selected: number;\n    private menuItems: string[];\n    private menuActions: Array<(() => void)>;\n\n    constructor() {\n        this.selected = 0;\n        this.menuItems = [\"Start\", \"Options\", \"Help\", \"Credits\"];\n        this.menuActions = [this.chooseGame, this.chooseOptions, this.chooseHelp, this.chooseCredits];\n    }\n\n    public update() {\n        if (InputManager.pressed(Key.UP_ARROW) || InputManager.pressed(Key.W)) {\n            if (this.selected !== 0) {\n                this.selected -= 1;\n            }\n        }\n        if (InputManager.pressed(Key.DOWN_ARROW) || InputManager.pressed(Key.S)) {\n            if (this.selected !== this.menuItems.length - 1) {\n                this.selected += 1;\n            }\n        }\n        if (InputManager.pressed(Key.ENTER) || InputManager.pressed(Key.SPACE)) {\n            // Selection\n            this.menuActions[this.selected]();\n        }\n    }\n\n    public draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = \"white\";\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2, CANVAS_HEIGHT / 2 - 50);\n\n        ctx.font = \"32px 'Press Start 2P'\";\n        for (let i = 0; i < this.menuItems.length; i++) {\n            if (i === this.selected) {\n                ctx.fillStyle = \"yellow\";\n            } else {\n                ctx.fillStyle = \"white\";\n            }\n            const menuText = (i === this.selected ? \"- \" : \"\") + this.menuItems[i];\n            const xPos = 150 + (i === this.selected ? 50 : 0);\n            const yPos = 400 + i * 50;\n            ctx.fillText(menuText, xPos, yPos);\n        }\n    }\n\n    private chooseGame() {\n        // TODO: Create game screen\n    }\n\n    private chooseOptions() {\n        game.SetUpScreen(OptionsScreen);\n    }\n\n    private chooseHelp() {\n        game.SetUpScreen(HelpScreen);\n    }\n\n    private chooseCredits() {\n        game.SetUpScreen(CreditsScreen);\n    }\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}