{"version":3,"sources":["node_modules/browser-pack/_prelude.js","app/ts/config.ts","app/ts/creditsscreen.ts","app/ts/game.ts","app/ts/helpscreen.ts","app/ts/input.ts","app/ts/main.ts","app/ts/optionsscreen.ts","app/ts/titlescreen.ts"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","export const CANVAS_WIDTH: number = 1100;\nexport const CANVAS_HEIGHT: number = 600;\n\nexport const FADE_IN_TIME: number = 1;\nexport const FADE_OUT_TIME: number = 0.5;\n\nexport const DEBUG: boolean = true;\n\nexport const CANVAS_OFFSET_X = CANVAS_WIDTH / 2;\nexport const CANVAS_OFFSET_Y = 144 + 202;","import { IScreen } from './screen';\nimport { InputManager, Key } from './input';\nimport { game } from './game';\nimport { CANVAS_WIDTH } from './config';\n\nexport class CreditsScreen implements IScreen {\n    prevScreen: IScreen;\n    credits: string[];\n\n    constructor(prevScreen?: IScreen) {\n        this.prevScreen = prevScreen;\n        this.credits = [\n            'Designed by Alic Szecsei',\n            'Artwork by Ren Neymeyer'\n        ];\n    }\n\n    update(deltaTime: number): void {\n        if(InputManager.GetInstance().pressed(Key.ENTER)\n            || InputManager.GetInstance().pressed(Key.SPACE)\n            || InputManager.GetInstance().pressed(Key.ESCAPE)) {\n            game.currentScreen = this.prevScreen;\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = 'red';\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width)/2, 150);\n        ctx.fillStyle = 'white';\n        ctx.font = \"32px 'Press Start 2P'\";\n        for(let i=0; i<this.credits.length; i++) {\n            ctx.fillText(this.credits[i], (CANVAS_WIDTH - ctx.measureText(this.credits[i]).width)/2, 250 + (i * 50));\n        }\n        ctx.fillStyle = 'yellow';\n        ctx.font = \"32px 'Press Start 2P'\";\n        const backText = \"Back\";\n        ctx.fillText(backText, (CANVAS_WIDTH - ctx.measureText(backText).width)/2, 400);\n    }\n\n}","import { IScreenConstructor, IScreen } from './screen';\nimport { TitleScreen } from './titlescreen';\n\nclass Game {\n    currentScreen: IScreen;\n\n    SetUpScreen(ScreenType: IScreenConstructor) {\n        const mOldScreen = this.currentScreen;\n        const newScreen = new ScreenType(mOldScreen);\n        this.currentScreen = newScreen;\n    }\n\n    constructor() {\n        this.SetUpScreen(TitleScreen);\n    }\n}\n\nexport const game: Game = new Game();","import { IScreen } from './screen';\nimport { InputManager, Key } from './input';\nimport { game } from './game';\nimport { CANVAS_WIDTH } from './config';\n\nexport class HelpScreen implements IScreen {\n    prevScreen: IScreen;\n    instructions: string[];\n    constructor(prevScreen: IScreen) {\n        this.prevScreen = prevScreen;\n        this.instructions = [\n            'Arrow keys to move',\n            'Spacebar to activate pickups',\n            'Dodge the bees to survive!'\n        ];\n    }\n    update(deltaTime: number): void {\n        if(InputManager.GetInstance().pressed(Key.ENTER)\n            || InputManager.GetInstance().pressed(Key.SPACE)\n            || InputManager.GetInstance().pressed(Key.ESCAPE)) {\n            game.currentScreen = this.prevScreen;\n        }\n    }\n    draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = 'red';\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width)/2, 150);\n        ctx.fillStyle = 'white';\n        ctx.font = \"32px 'Press Start 2P'\";\n        for(let i = 0; i < this.instructions.length; i++) {\n            ctx.fillText(this.instructions[i], (CANVAS_WIDTH - ctx.measureText(this.instructions[i]).width)/2, 250 + i * 50);\n        }\n        ctx.fillStyle = 'yellow';\n        ctx.font = \"32px 'Press Start 2P'\";\n        const backText = \"Back\";\n        ctx.fillText(backText, (CANVAS_WIDTH - ctx.measureText(backText).width)/2, 400);\n    }\n    \n}","export enum Key {\n    BACKSPACE = 8,\n    TAB = 9,\n    ENTER = 13,\n    SHIFT = 16,\n    CTRL = 17,\n    ALT = 18,\n    PAUSE_BREAK = 19,\n    CAPS_LOCK = 20,\n    ESCAPE = 27,\n    SPACE = 32,\n    PAGE_UP = 33,\n    PAGE_DOWN = 34,\n    END = 35,\n    HOME = 36,\n    LEFT_ARROW = 37,\n    UP_ARROW = 38,\n    RIGHT_ARROW = 39,\n    DOWN_ARROW = 40,\n    INSERT = 45,\n    DELETE = 46,\n    ZERO = 48,\n    ONE = 49,\n    TWO = 50,\n    THREE = 51,\n    FOUR = 52,\n    FIVE = 53,\n    SIX = 54,\n    SEVEN = 55,\n    EIGHT = 56,\n    NINE = 57,\n    A = 65,\n    B = 66,\n    C = 67,\n    D = 68,\n    E = 69,\n    F = 70,\n    G = 71,\n    H = 72,\n    I = 73,\n    J = 74,\n    K = 75,\n    L = 76,\n    M = 77,\n    N = 78,\n    O = 79,\n    P = 80,\n    Q = 81,\n    R = 81,\n    S = 83,\n    T = 84,\n    U = 85,\n    V = 86,\n    W = 87,\n    X = 88,\n    Y = 89,\n    Z = 90,\n    WIN_LEFT = 91,\n    WIN_RIGHT = 92,\n    SELECT = 93,\n    NUM_ZERO = 96,\n    NUM_ONE = 97,\n    NUM_TWO = 98,\n    NUM_THREE = 99,\n    NUM_FOUR = 100,\n    NUM_FIVE = 101,\n    NUM_SIX = 102,\n    NUM_SEVEN = 103,\n    NUM_EIGHT = 104,\n    NUM_NINE = 105,\n    MULTIPLY = 106,\n    ADD = 107,\n    SUBTRACT = 109,\n    DECIMAL = 110,\n    DIVIDE = 111,\n    F1 = 112,\n    F2 = 113,\n    F3 = 114,\n    F4 = 115,\n    F5 = 116,\n    F6 = 117,\n    F7 = 118,\n    F8 = 119,\n    F9 = 120,\n    F10 = 121,\n    F11 = 122,\n    F12 = 123,\n    NUM_LOCK = 144,\n    SCROLL_LOCK = 145,\n    SEMICOLON = 186,\n    EQUALS = 187,\n    COMMA = 188,\n    DASH = 189,\n    PERIOD = 190,\n    FORWARD_SLASH = 191,\n    GRAVE_ACCENT = 192,\n    OPEN_BRACKET = 219,\n    BACK_SLASH = 220,\n    CLOSE_BRACKET = 221,\n    SINGLE_QUOTE = 222\n}\n\nexport class InputManager {\n    private constructor() {}\n\n    private static mInstance = new InputManager();\n\n    private mPressed = new Set<Key>();\n    private mLastPressed = new Set<Key>();\n\n    static GetInstance() {\n        return InputManager.mInstance;\n    }\n\n    isDown(keyCode: Key) {\n        return this.mPressed.has(keyCode);\n    }\n\n    pressed(keyCode: Key) {\n        return this.mPressed.has(keyCode) && !this.mLastPressed.has(keyCode);\n    }\n\n    isUp(keyCode: Key) {\n        return !this.mPressed.has(keyCode);\n    }\n\n    released(keyCode: Key) {\n        return !this.mPressed.has(keyCode) && this.mLastPressed.has(keyCode);\n    }\n\n    onKeydown(event: KeyboardEvent) {\n        this.mPressed.add(event.keyCode);\n        event.preventDefault();\n    }\n\n    onKeyup(event: KeyboardEvent) {\n        this.mPressed.delete(event.keyCode);\n        event.preventDefault();\n    }\n\n    flush() {\n        this.mLastPressed.clear();\n        this.mPressed.forEach((k: Key) => {\n            this.mLastPressed.add(k);\n        });\n    }\n}","import * as config from './config';\n\nimport { game } from './game';\nimport { InputManager, Key } from './input';\n\nlet currentScreen: Screen;\n\nconst canvas = <HTMLCanvasElement>document.getElementById('canvas');\ncanvas.width = config.CANVAS_WIDTH;\ncanvas.height = config.CANVAS_HEIGHT;\nlet ctx = canvas.getContext(\"2d\", {alpha: false});\nctx.imageSmoothingEnabled = false;\nctx.textBaseline = \"middle\";\ncanvas.width = config.CANVAS_WIDTH;\ncanvas.height = config.CANVAS_HEIGHT;\nconst FPS = 30;\n\n// TODO: Load all resources\n\nlet last = -1;\nlet fpsList = [0];\n\n// add input listeners\nwindow.addEventListener('keyup', (event: KeyboardEvent) => {InputManager.GetInstance().onKeyup(event);});\nwindow.addEventListener('keydown', (event: KeyboardEvent) => {InputManager.GetInstance().onKeydown(event);});\n\nfunction gameloop(ts: number) {\n  let inc = 0;\n  if(last === -1) {\n    last = ts;\n  } else {\n    inc = ts - last;\n    last = ts;\n  }\n\n  ctx.clearRect(0, 0, config.CANVAS_WIDTH, config.CANVAS_HEIGHT);\n\n  game.currentScreen.update(inc);\n  game.currentScreen.draw(ctx, inc);\n\n  /* FPS Counter */\n  if(config.DEBUG) {\n    fpsList.push(inc);\n    if(fpsList.length > 10) {\n      fpsList.shift();\n      ctx.fillStyle = 'white';\n      ctx.font = \"1em 'Press Start 2P\";\n      let avgFPS = fpsList.reduce((x, y) => {return x + y;}, 0) / 10;\n      ctx.fillText(`FPS: ${(1000/avgFPS).toFixed(3)}`, 50, 50);\n    }\n  }\n\n  InputManager.GetInstance().flush();\n\n  window.requestAnimationFrame(gameloop);\n}\nwindow.requestAnimationFrame(gameloop);\n","import { IScreen } from './screen';\nimport { InputManager, Key } from './input';\nimport { game } from './game';\nimport { CANVAS_WIDTH, CANVAS_HEIGHT } from './config';\n\nexport class OptionsScreen implements IScreen {\n    prevScreen: IScreen;\n    options: string[];\n    selected: number;\n\n    constructor(prevScreen?: IScreen) {\n        this.prevScreen = prevScreen;\n        this.options = [\"Clear High Scores\", \"Back\"];\n        this.selected = this.options.length - 1;\n    }\n\n    update(deltaTime: number): void {\n        if(InputManager.GetInstance().pressed(Key.UP_ARROW) || InputManager.GetInstance().pressed(Key.W)) {\n            this.selected = (this.selected == 0 ? this.options.length - 1 : this.selected - 1);\n        }\n        if(InputManager.GetInstance().pressed(Key.DOWN_ARROW) || InputManager.GetInstance().pressed(Key.S)) {\n            this.selected = (this.selected == this.options.length - 1 ? 0 : this.selected + 1);\n        }\n\n        if(InputManager.GetInstance().pressed(Key.ENTER) || InputManager.GetInstance().pressed(Key.SPACE)) {\n            if(this.selected == 1) {\n                game.currentScreen = this.prevScreen;\n            } else if(this.selected == 0) {\n                // TODO: Clear high scores\n                game.currentScreen = this.prevScreen;\n            }\n        }\n    }\n\n    draw(ctx: CanvasRenderingContext2D, deltaTime: number): void {\n        ctx.fillStyle = 'red';\n        ctx.font = \"32pt 'Press Start 2P'\";\n        const titleText = \"OPTIONS\";\n        let xPos = (CANVAS_WIDTH - ctx.measureText(titleText).width)/2;\n        let yPos = CANVAS_HEIGHT / 2;\n        ctx.fillText(titleText, xPos, yPos);\n\n        ctx.font = \"16pt 'Press Start 2P'\";\n        for(let i = 0; i < this.options.length; i++) {\n            if(i == this.selected) {\n                ctx.fillStyle = 'yellow';\n            } else {\n                ctx.fillStyle = 'white';\n            }\n            xPos = (CANVAS_WIDTH - ctx.measureText(this.options[i]).width)/2;\n            yPos = 400 + i * 50;\n            ctx.fillText(this.options[i], xPos, yPos);\n        }\n    }\n\n}","import { IScreen } from './screen';\nimport { InputManager, Key } from './input';\nimport { game } from './game';\nimport { CANVAS_WIDTH, CANVAS_HEIGHT } from './config';\n\nimport { OptionsScreen } from './optionsscreen';\nimport { HelpScreen } from './helpscreen';\nimport { CreditsScreen } from './creditsscreen';\n\nexport class TitleScreen implements IScreen {\n\n    selected: number;\n    menuItems: string[];\n    menuActions: (() => void)[];\n\n    constructor() {\n        this.selected = 0;\n        this.menuItems = ['Start', 'Options', 'Help', 'Credits'];\n        this.menuActions = [this.chooseGame, this.chooseOptions, this.chooseHelp, this.chooseCredits];\n    }\n\n    update() {\n        if(InputManager.GetInstance().pressed(Key.UP_ARROW) || InputManager.GetInstance().pressed(Key.W)) {\n            if(this.selected != 0) {\n                this.selected -= 1;\n            }\n        }\n        if(InputManager.GetInstance().pressed(Key.DOWN_ARROW) || InputManager.GetInstance().pressed(Key.S)) {\n            if(this.selected != this.menuItems.length - 1) {\n                this.selected += 1;\n            }\n        }\n        if(InputManager.GetInstance().pressed(Key.ENTER) || InputManager.GetInstance().pressed(Key.SPACE)) {\n            // Selection\n            this.menuActions[this.selected]();\n        }\n    }\n\n    chooseGame() {\n\n    }\n\n    chooseOptions() {\n        game.SetUpScreen(OptionsScreen);\n    }\n\n    chooseHelp() {\n        game.SetUpScreen(HelpScreen);\n    }\n\n    chooseCredits() {\n        game.SetUpScreen(CreditsScreen);\n    }\n\n    draw(ctx: CanvasRenderingContext2D) {\n        ctx.fillStyle = 'white';\n        ctx.font = \"64pt 'Press Start 2P'\";\n        const titleText = \"Bee Dodger\";\n        ctx.fillText(titleText, (CANVAS_WIDTH - ctx.measureText(titleText).width) / 2, CANVAS_HEIGHT/2 - 50);\n\n        ctx.font = \"32px 'Press Start 2P'\";\n        for(let i = 0; i < this.menuItems.length; i++) {\n            if(i === this.selected) {\n                ctx.fillStyle = 'yellow';\n            } else {\n                ctx.fillStyle = 'white';\n            }\n            const menuText = (i === this.selected ? \"- \" : \"\") + this.menuItems[i];\n            const xPos = 150 + (i === this.selected ? 50 : 0);\n            const yPos = 400 + i * 50;\n            ctx.fillText(menuText, xPos, yPos);\n        }\n    }\n}"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}